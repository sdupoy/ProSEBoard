package fr.eseo.ld.proseboard.selenium;

import static org.testng.AssertJUnit.assertEquals;

import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.htmlunit.HtmlUnitDriver;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

public class ProseBoardTestAdminOptions {
	private WebDriver webDriver;

	/*
	 * initialise html driver + connexion en tant qu'admin afin de pouvoir créer
	 * un utilisateur
	 */
	@BeforeClass
	public void initiateWebDriver() {
		webDriver = new HtmlUnitDriver();
		webDriver.get("http://localhost:8080/proseboard");
		WebElement usernameBox = webDriver.findElement(By.name("login"));
		WebElement passwordBox = webDriver.findElement(By.name("password"));
		usernameBox.sendKeys("admin@proseboard.fr");
		passwordBox.sendKeys("admin");
		WebElement loginButton = webDriver.findElement(By.name("submit"));
		loginButton.click();
	}

	/*
	 * We test if we were on the right page.
	 */
	@Test
	public void testTitlePage() {
		assertEquals(webDriver.getTitle(), "ProSEBoard");
	}

	/*
	 * Test that if we click on "créer un utilisateur" next url will be
	 * /proseboard/utlisateur/creer
	 */
	@Test(dependsOnMethods = { "testTitlePage" })
	public void testCreateUserLink() {
		WebElement createUserLink = webDriver.findElement(By
				.linkText("Créer un utilisateur"));

		createUserLink.click();
		assertEquals(webDriver.getCurrentUrl(),
				"http://localhost:8080/proseboard/utilisateur/creer");
	}

	/*
	 * Test that elements for creating user exists.
	 */
	@Test(dependsOnMethods = { "testCreateUserLink" })
	public void testCreateUserPage() {

		WebElement firstString = webDriver.findElement(By.tagName("h1"));
		WebElement secondString = webDriver.findElement(By.tagName("h2"));
		WebElement firstNameField = webDriver.findElement(By
				.name("user_first_name"));
		WebElement userNameField = webDriver.findElement(By.name("user_name"));
		WebElement mailField = webDriver.findElement(By.name("user_mail"));
		WebElement passwordField = webDriver.findElement(By
				.name("user_password"));
		WebElement secondPasswordField = webDriver.findElement(By
				.name("user_password_bis"));
		List<WebElement> webElements = webDriver.findElements(By
				.name("statuses"));
		WebElement submitButton = webDriver.findElement(By.tagName("button"));

		assertEquals(firstString.getText(), "Création d'un utilisateur");
		assertEquals(secondString.getText(),
				"Insérer les informations suivantes");
		assertEquals(
				firstNameField.toString(),
				"<input type=\"text\" name=\"user_first_name\" class=\"form-control\" placeholder=\"Prenom\" required=\"\" />");
		assertEquals(
				userNameField.toString(),
				"<input type=\"text\" name=\"user_name\" class=\"form-control\" placeholder=\"Nom\" required=\"\" autofocus=\"\" />");
		assertEquals(
				mailField.toString(),
				"<input type=\"email\" name=\"user_mail\" class=\"form-control\" placeholder=\"Email\" required=\"\" />");
		assertEquals(
				passwordField.toString(),
				"<input type=\"password\" name=\"user_password\" class=\"form-control\" placeholder=\"Mot de passe\" required=\"\" />");
		assertEquals(
				secondPasswordField.toString(),
				"<input type=\"password\" name=\"user_password_bis\" class=\"form-control\" placeholder=\"Répétez mot de passe\" required=\"\" />");
		assertEquals(webElements.get(0).getAttribute("value"), "1");
		assertEquals(webElements.get(1).getAttribute("value"), "2");
		assertEquals(webElements.get(2).getAttribute("value"), "8");
		assertEquals(webElements.get(3).getAttribute("value"), "3");
		assertEquals(webElements.get(4).getAttribute("value"), "4");
		assertEquals(webElements.get(5).getAttribute("value"), "7");
		assertEquals(submitButton.getText(), "Créer");
	}

	/*
	 * Test create user - Ce test ne passe pas car il est actuellement
	 * impossible de créer un utilisateur !
	 */

	/*
	 * @Test(dependsOnMethods={"testCreateUserPage"}) public void
	 * testCreateUser(){ WebElement firstNameField=
	 * webDriver.findElement(By.name("user_first_name")); WebElement
	 * userNameField = webDriver.findElement(By.name("user_name")); WebElement
	 * mailField = webDriver.findElement(By.name("user_mail")); WebElement
	 * passwordField = webDriver.findElement(By.name("user_password"));
	 * WebElement secondPasswordField =
	 * webDriver.findElement(By.name("user_password_bis")); WebElement
	 * submitButton = webDriver.findElement(By.tagName("button"));
	 * 
	 * firstNameField.sendKeys("Croccel"); userNameField.sendKeys("Manu");
	 * mailField.sendKeys("manu@proseboard.fr");
	 * passwordField.sendKeys("admin"); secondPasswordField.sendKeys("admin");
	 * submitButton.click();
	 * 
	 * assertEquals(webDriver.getCurrentUrl(),
	 * "http://http://localhost:8080/proseboard/utilisateur/creer"); }
	 */

	/*
	 * Test that auditor can click on Gerer utilisateur
	 */
	@Test(dependsOnMethods = { "testCreateUserPage" })
	public void testManageUserPage() {
		WebElement gererUserLink = webDriver.findElement(By
				.linkText("Gérer les utilisateurs"));
		gererUserLink.click();
		assertEquals(webDriver.getCurrentUrl(),
				"http://localhost:8080/proseboard/utilisateur/gerer");
	}

	/*
	 * Test that content is ok in this page.
	 */
	@Test(dependsOnMethods = { "testManageUserPage" })
	public void testContentManagePage() {
		WebElement firstString = webDriver.findElement(By.tagName("h1"));
		List<WebElement> tableau = webDriver.findElements(By.tagName("th"));
		assertEquals(firstString.getText(), "Gestion des utilisateurs");
		assertEquals(tableau.get(0).getText(), "N°");
		assertEquals(tableau.get(1).getText(), "Nom");
		assertEquals(tableau.get(2).getText(), "Mail");
		assertEquals(tableau.get(3).getText(), "Status");
		assertEquals(tableau.get(4).getText(), "Permissions");

	}

	/*
	 * Test le lien "gerer session"
	 */
	@Test(dependsOnMethods = { "testContentManagePage" })
	public void testGererSessionLink() {
		WebElement gererSessionLink = webDriver.findElement(By
				.linkText("Gérer les sessions"));
		gererSessionLink.click();
		assertEquals(webDriver.getCurrentUrl(),
				"http://localhost:8080/proseboard/ManageSessions");
	}

	/*
	 * test le contenu de la page Gerer session
	 */
	@Test(dependsOnMethods = { "testGererSessionLink" })
	public void testContenuGererSessionPage() {
		WebElement firstString = webDriver.findElement(By.tagName("h1"));
		WebElement sessionElement = webDriver.findElement(By.tagName("label"));
		List<WebElement> webElements = webDriver.findElements(By
				.tagName("form"));
		List<WebElement> buttons = webDriver.findElements(By.tagName("button"));
		assertEquals(sessionElement.getText(), "Sessions");
		assertEquals(firstString.getText(), "Gestion des sessions");
		assertEquals(webElements.get(0).getAttribute("action"), "DeleteSession");
		assertEquals(webElements.get(1).getAttribute("action"), "ManageTeams");
		assertEquals(buttons.get(2).getText(), "Créer une nouvelle session");
	}

	/*
	 * Test du bouton pour ajouter une équipe
	 */
	@Test(dependsOnMethods = { "testContenuGererSessionPage" })
	public void testAjoutEquipeLink() {
		List<WebElement> buttons = webDriver.findElements(By.tagName("button"));
		buttons.get(1).click();
		WebElement firstString = webDriver.findElement(By.tagName("h1"));
		assertEquals(firstString.getText(), "Gestion des équipes");
	}

	/*
	 * Test du bouton pour revenir a la gestion des sessions.
	 */
	@Test(dependsOnMethods = { "testContenuGererSessionPage" })
	public void testRetourManageSession() {
		List<WebElement> buttons = webDriver.findElements(By.tagName("button"));
		buttons.get(3).click();
		WebElement firstString = webDriver.findElement(By.tagName("h1"));
		assertEquals(firstString.getText(), "Gestion des sessions");
	}

	/*
	 * Test du bouton pour supprimer une équipe
	 */
	@Test(dependsOnMethods = { "testRetourManageSession" })
	public void testSupprimerEquipeLink() {
		List<WebElement> buttons = webDriver.findElements(By.tagName("button"));
		buttons.get(0).click();
		WebElement firstString = webDriver.findElement(By.tagName("h1"));
		assertEquals(firstString.getText(),
				"Voulez vous vraiment supprimer la session test ?");
	}

	/*
	 * Test du retour en arriere vers la gestion des sessions
	 */
	@Test(dependsOnMethods = { "testSupprimerEquipeLink" })
	public void testRetourArriereGestionSession() {
		WebElement button = webDriver.findElement(By
				.linkText("Revenir aux sessions"));
		button.click();
		WebElement firstString = webDriver.findElement(By.tagName("h1"));
		assertEquals(firstString.getText(), "Gestion des sessions");
	}
}
