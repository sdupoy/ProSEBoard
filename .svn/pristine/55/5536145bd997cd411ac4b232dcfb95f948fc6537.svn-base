<?xml version="1.0" encoding="ISO-8859-1" ?>
<!-- Create a project, giving it a name, setting the base directory and setting a namespace for jacoco,
 otherwise eclipse highlights an error -->
<project name="ProSeBoard" basedir="." xmlns:jacoco="antlib:org.jacoco.ant">
	<!-- Declare a folder (sub folder of the project root, to store testng results -->
	<property name="test_results" location="junit"/>
    <!-- Declare the path (relative to the basedir) where the compiled classes will be stored -->
	<path id="libpath">
		<fileset dir="/srv/tomcat-8/lib">
        	<include name="**/*.jar" />
        </fileset>
    	<fileset dir="./WebContent/WEB-INF/lib">
            <include name="**/*.jar" />
        </fileset>
	</path>
    <path id="classpath">
        <pathelement location="build/classes"/>
	</path>
	<!-- Define the junit ant task -->
	<taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask">
		<classpath>
    		<!-- On your servers, the ant-junit4.jar file is stored in the ant/lib file-->
			<pathelement location="ant-junit4.jar"/>
    	</classpath>
  	</taskdef>

	<!-- Define the jacoco ant task -->
	<taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
    	<!-- On your servers, the jacocoant.jar file is stored in the ant/lib file-->
        <classpath path="jacocoant.jar"/>
    </taskdef>
	
	<!-- target used to delete any of the folders created by the antbuild -->   
    <target name="clean">
        <delete dir="build"/>
    	<delete dir="junit"/>
    </target>
    
	<!-- target used to compile the source code for falling blox-->
    <target name="compile_src">
        <mkdir dir="build/classes"/>
        <javac includeantruntime="false" srcdir="src" destdir="build/classes">
        	<classpath refid="libpath"/>
        </javac>
    </target>
	
	<!-- target used to compile the test source code for falling blox, depends upon the source code being compiled-->
    <target name="compile_tests" depends="compile_src">
         <javac includeantruntime="false" srcdir="tests" destdir="build/classes">
         	<classpath refid="libpath"/>
         	<classpath refid="classpath"/>
         </javac>
    </target>
    
    <!-- dummy target that compiles both source and tests -->
    <target name="compile" depends="compile_src,compile_tests"/>
    
	<!-- target that runs the junit ant task, and which generates a code coverage analysis by jacoco
		NOTE: If you use junit, you must fork the jvm. TestNG forks automatically.
	-->
    <target name="test_execution" depends="compile">
    	<jacoco:coverage excludes="Bcrypt">
    		<junit printsummary="true" haltonfailure="false" fork="yes" forkmode="once">
    				<formatter type="xml" />
    				<classpath refid="classpath"/>
    				<classpath refid="libpath"/>
    	        	<classpath>
			            <pathelement location="./WebContent/WEB-INF/lib/junit-4.12.jar"/>
			        </classpath>
    	            <batchtest fork="yes" todir="${test_results}">
    	            	<fileset dir="build/classes/">
	            	    	<include name="**/*Test*"/>
	            	    </fileset>
	            	</batchtest>
    	        </junit>
    	</jacoco:coverage>
    </target>

</project>